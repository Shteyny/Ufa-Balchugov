import pygame
import random
import time

x = 0
y = 30
v = 100
size = 800, 600
clock = pygame.time.Clock()
balls = []
timer2 = time.clock()

class Image(pygame.sprite.Sprite):
    def __init__(self, x, y, filename):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load(filename).convert_alpha()
        self.rect = self.image.get_rect()
        self.rect.x, self.rect.y = x, y



class Ball:
    def __init__(self, x, y, speed):
        self.x = x
        self.y = y
        self.speed = speed
        self.time = pygame.time.Clock()
        self.direction = [1, 1]

    def move(self):
        pygame.draw.circle(screen, (255, 255, 255), (int(self.x), int(self.y)), 10)#!!!!!!!!
        kmph = self.speed * self.time.tick() / 1000
        self.turn()
        self.x += kmph * -(self.direction[0])
        self.y += kmph * -(self.direction[1])

    def turn(self):
        if self.y - 10 < 0 or self.y + 10 > 600:
            self.direction[1] *= -1
        if self.x - 10 < 0 or self.x + 10 > 800:
            self.direction[0] *= -1

    def result(self):
        return [self.x, self.y]



pygame.init()
screen = pygame.display.set_mode(size)
run = True
draw_ball = False
timer = time.clock()
alltime = 1
koor = [250, 250]
pygame.display.set_caption('Игра')
pygame.font.SysFont('arial', 14)
f1 = pygame.font.Font(None, 30)


new = Image(-600, 0, 'data/gameover.png')
while run:


    draw_ball = True

    if time.clock() - timer > alltime:
        x += 100
        balls.append(Ball(random.randint(0, 800), random.randint(0, 600), v))
        if alltime > 0.5:
            alltime -= 0.05
            #text1 = f1.render(str(x), 1, (255, 0, 0))
            #screen.blit(text1, (700, 30))
            #pygame.display.update()
        timer = time.clock()
    text1 = f1.render(str(x), 1, (255, 255, 0))
    screen.blit(text1, (700, 30))
    pygame.display.update()



    screen.fill((0, 0, 0))
    if draw_ball:
        for i in range(len(balls)):
            balls[i].move()
    pygame.display.flip()
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
        if event.type == pygame.MOUSEMOTION:
            if screen.get_at(pygame.mouse.get_pos()) == (255, 255, 255, 255):
                run = False

last = [400, 300]

while 1:
    for i in pygame.event.get():
        if i.type == pygame.QUIT:
            exit()

    screen.fill(pygame.Color("black"))
    screen.blit(new.image, new.rect)
    pygame.display.update()

    if new.rect.x < 0:
        new.rect.x += 1

    pygame.time.delay(3)
